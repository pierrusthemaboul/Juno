from googletrans import Translator
import pandas as pd
from sqlalchemy import create_engine
from sqlalchemy.exc import OperationalError
import time
from tqdm import tqdm
import urllib.parse

# Encodage du mot de passe pour l'URL
password = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBweG10bnVld2NpeGJibWhuenpjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjY4OTkxMjcsImV4cCI6MjA0MjQ3NTEyN30.0z2be74E3db-XvyIKXPlogI__9Ric1Il4cZ1Fs7TJ5U"
encoded_password = urllib.parse.quote_plus(password)

# Construction de l'URL de connexion
url = f"postgresql://postgres:{encoded_password}@ppxmtnuewcixbbmhnzzc.supabase.co:5432/postgres"

# Tentative de connexion √† la base de donn√©es Supabase
try:
    engine = create_engine(url)
    with engine.connect() as connection:
        print("‚úÖ Connexion r√©ussie √† la base de donn√©es Supabase.")
except OperationalError as e:
    print(f"‚ùå Erreur de connexion √† la base de donn√©es: {str(e)}")
    exit()

# R√©cup√©rer les titres de la table
query = "SELECT id, titre FROM transitoire2 WHERE titre_anglais IS NULL;"
try:
    data = pd.read_sql(query, engine)
    print(f"üìö {len(data)} titres √† traduire trouv√©s.")
except Exception as e:
    print(f"‚ùå Erreur lors de la r√©cup√©ration des donn√©es : {str(e)}")
    exit()

if len(data) == 0:
    print("‚ú® Rien √† traduire, tous les titres ont d√©j√† une traduction.")
    exit()

# Initialiser le traducteur
translator = Translator()
successful_translations = 0
failed_translations = 0

# Utilisation de tqdm pour la barre de progression
for index, row in tqdm(data.iterrows(), total=len(data), desc="üîÑ Traduction en cours"):
    try:
        translated_title = translator.translate(row['titre'], src='fr', dest='en').text
        
        # √âchapper les apostrophes pour √©viter les erreurs SQL
        translated_title = translated_title.replace("'", "''")
        
        update_query = f"""
        UPDATE transitoire2
        SET titre_anglais = '{translated_title}'
        WHERE id = '{row['id']}';
        """
        with engine.connect() as conn:
            conn.execute(update_query)
        
        successful_translations += 1
        time.sleep(0.5)  # Petit d√©lai pour √©viter de surcharger l'API
        
    except Exception as e:
        print(f"\n‚ùå Erreur pour '{row['titre']}': {str(e)}")
        failed_translations += 1
        time.sleep(1)
        continue

print(f"\n‚úÖ Traductions termin√©es !")
print(f"üìä R√©sultats :")
print(f"   ‚úì {successful_translations} traductions r√©ussies")
print(f"   ‚úó {failed_translations} √©checs")